/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin editor.

  ==============================================================================
*/

#ifndef PLUGINEDITOR_H_INCLUDED
#define PLUGINEDITOR_H_INCLUDED

#include "../JuceLibraryCode/JuceHeader.h"
#include "PluginProcessor.h"


//==============================================================================
/**
*/
class Musi45effectAudioProcessorEditor  :   public AudioProcessorEditor,
                                            public SliderListener,  // STEP 3.1 - make Editor a SliderListener
                                            public Timer            // STEP 5.1 - make Editor a Timer
{
public:
    Musi45effectAudioProcessorEditor (Musi45effectAudioProcessor&);
    ~Musi45effectAudioProcessorEditor();

    //==============================================================================
    void paint (Graphics&) override;
    void resized() override;
    void sliderValueChanged (Slider*) override; // STEP 3.2 - add the callback function
    void timerCallback() override;              // STEP 5.2 - add the timer callback function

private:
    // This reference is provided as a quick way for your editor to
    // access the processor object that created it.
    Musi45effectAudioProcessor& processor;
    
    // STEP 1 - Add sliders here:
    Slider peakFreqSlider;
    Slider peakGainSlider;
    Slider qSlider;
    Slider lowFreqSlider;
    Slider lowGainSlider;
    Slider decaySlider;
    Slider timeSlider;
    Slider wetSlider;
    Slider drySlider;
    
    // STEP 2 - Add labels here:
    Label peakFreqLabel;
    Label peakGainLabel;
    Label qLabel;
    Label lowFreqLabel;
    Label lowGainLabel;
    Label decayLabel;
    Label timeLabel;
    Label wetLabel;
    Label dryLabel;
    
    // Add any other private variables you need here.
    
    // STEP 3.5 - Add a method that returns a pointer to the Processor object. This is how the Editor can send data to the processor
    Musi45effectAudioProcessor& getProcessor() const
    {
        return static_cast<Musi45effectAudioProcessor&> (processor);
    }

    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (Musi45effectAudioProcessorEditor)
};


#endif  // PLUGINEDITOR_H_INCLUDED
